// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/posts": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "Получить список постов",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Смещение",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество записей",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/posts.Post"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Создать новый пост",
                "parameters": [
                    {
                        "description": "Данные поста",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/posts.Post"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/posts.Post"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/posts/slug/{slug}": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "Получить пост по slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug поста",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/posts.Post"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{id}": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "Получить пост по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID поста",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/posts.Post"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Обновить пост",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID поста",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные поста",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/posts.Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/posts.Post"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Удалить пост",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID поста",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/posts.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get status of the API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check API health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "comments.Comment": {
            "description": "Комментарий к посту",
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer",
                    "example": 42
                },
                "content": {
                    "type": "string",
                    "example": "Это очень интересный пост!"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-01-01T00:00:00Z"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "likes": {
                    "description": "Метаданные",
                    "type": "integer",
                    "example": 15
                },
                "parent_id": {
                    "description": "Для древовидной структуры",
                    "type": "integer"
                },
                "post_id": {
                    "type": "integer",
                    "example": 5
                },
                "status": {
                    "enum": [
                        "active",
                        "deleted",
                        "hidden"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/comments.Status"
                        }
                    ],
                    "example": "active"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-02T00:00:00Z"
                }
            }
        },
        "comments.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "details": {
                    "type": "string",
                    "example": "Поле 'title' не может быть пустым"
                },
                "message": {
                    "type": "string",
                    "example": "Неверный формат данных"
                }
            }
        },
        "comments.Status": {
            "description": "Статус комментария",
            "type": "string",
            "enum": [
                "active",
                "deleted",
                "hidden"
            ],
            "x-enum-varnames": [
                "StatusActive",
                "StatusDeleted",
                "StatusHidden"
            ]
        },
        "posts.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "details": {
                    "type": "string",
                    "example": "Поле 'title' не может быть пустым"
                },
                "message": {
                    "type": "string",
                    "example": "Неверный формат данных"
                }
            }
        },
        "posts.Post": {
            "description": "Пост в блоге",
            "type": "object",
            "properties": {
                "author_id": {
                    "description": "Связи",
                    "type": "integer",
                    "example": 5
                },
                "created_at": {
                    "description": "Временные метки",
                    "type": "string",
                    "example": "2025-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Подробное руководство по настройке документации API с помощью Swagger в Go-приложениях"
                },
                "html_content": {
                    "description": "Отрендеренный HTML",
                    "type": "string",
                    "example": "\u003ch1\u003eЗаголовок\u003c/h1\u003e\u003cp\u003eHTML контент поста...\u003c/p\u003e"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "published_at": {
                    "type": "string",
                    "example": "2025-01-03T12:00:00Z"
                },
                "raw_content": {
                    "description": "Контент",
                    "type": "string",
                    "example": "# Заголовок\n\nМаркдаун контент поста..."
                },
                "slug": {
                    "type": "string",
                    "example": "how-to-setup-swagger-in-go"
                },
                "status": {
                    "description": "Метаданные",
                    "enum": [
                        "draft",
                        "published",
                        "archived"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/posts.Status"
                        }
                    ],
                    "example": "published"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "golang",
                        "swagger",
                        "api"
                    ]
                },
                "title": {
                    "type": "string",
                    "example": "Как настроить Swagger в Go"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-02T00:00:00Z"
                },
                "view_count": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "posts.Status": {
            "description": "Статус поста",
            "type": "string",
            "enum": [
                "draft",
                "published",
                "archived"
            ],
            "x-enum-varnames": [
                "StatusDraft",
                "StatusPublished",
                "StatusArchived"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT токен в формате Bearer {token}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Blog Service API",
	Description:      "API для управления блогом с поддержкой OAuth, комментариев и поиска",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
